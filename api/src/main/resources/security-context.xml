<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
      xmlns="http://www.springframework.org/schema/security"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:beans="http://www.springframework.org/schema/beans"
      xsi:schemaLocation="
	http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
 	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

   <!-- REST should have no state, each request is re-authenticated -->
   <http create-session="stateless" use-expressions="true">
      <intercept-url pattern="/api-docs/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
      <intercept-url pattern="/static/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
      <intercept-url pattern="/" access="IS_AUTHENTICATED_ANONYMOUSLY" />
      
      <!-- All other endpoint secured -->
      <intercept-url pattern="/v1/api/**" access="hasAnyRole('ROLE_ihtsdo-sca-author')"/>
      <http-basic/>
      <custom-filter ref="authenticationDecorator" after="BASIC_AUTH_FILTER"/>
   </http>

   <global-method-security pre-post-annotations="enabled" secured-annotations="enabled" proxy-target-class="true"/>

   <!-- Basic Authentication -->
   <authentication-manager>
      <authentication-provider>
         <user-service>
            <user name="${srs.basicAuth.username}" password="${srs.basicAuth.password}" authorities="ROLE_USER"/>
         </user-service>
      </authentication-provider>
   </authentication-manager>

   <!-- SSO Authentication -->
   <beans:bean id="authenticationDecorator" class="org.ihtsdo.sso.integration.RequestHeaderAuthenticationDecorator"/>

   <beans:bean id="http403EntryPoint"
               class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint"/>

</beans:beans>