<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="
	    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd">

	<context:annotation-config />
	<tx:annotation-driven/>

	<!-- Bean to resolve the 'data-service-properties-path' from a system property -->
	<bean id="configurer1" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<!--<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>-->
		<property name="placeholderPrefix" value="+{"/>
		<property name="properties">
			<props>
				<prop key="dataServicePropertiesPath">classpath:data-service-defaults.properties</prop>
			</props>
		</property> 
		<property name="ignoreUnresolvablePlaceholders" value="true"/>
	</bean>

	<bean id="configurer2" class="org.ihtsdo.context.OrderedPropertyPlaceholderConfigurer">
		<property name="location" value="+{dataServicePropertiesPath}" />
	</bean>

	<bean class="org.ihtsdo.buildcloud.dao.ReleaseCenterDAOImpl"/>
	<bean class="org.ihtsdo.buildcloud.dao.ExtensionDAOImpl"/>
	<bean class="org.ihtsdo.buildcloud.dao.ProductDAOImpl"/>
	<bean class="org.ihtsdo.buildcloud.dao.BuildDAOImpl"/>
	<bean class="org.ihtsdo.buildcloud.dao.PackageDAOImpl"/>
	<bean class="org.ihtsdo.buildcloud.dao.InputFileDAOImpl">
		<property name="mavenS3BucketName" ref="MavenS3BucketName"/>
	</bean>
	<bean class="org.ihtsdo.buildcloud.dao.UserDAOImpl"/>
	<bean class="org.ihtsdo.buildcloud.dao.ReleaseCenterMembershipDAOImpl"/>
	<bean class="org.ihtsdo.buildcloud.dao.ExecutionDAOImpl"/>
	<bean class="org.ihtsdo.buildcloud.dao.helper.DevDatabasePrimerDAO"/>
	<bean class="org.ihtsdo.buildcloud.dao.AuthTokenDAOImpl"/>

	<bean class="org.ihtsdo.buildcloud.service.UserServiceImpl"/>
	<bean class="org.ihtsdo.buildcloud.service.ReleaseCenterServiceImpl"/>
	<bean class="org.ihtsdo.buildcloud.service.ExtensionServiceImpl"/>
	<bean class="org.ihtsdo.buildcloud.service.ProductServiceImpl"/>
	<bean class="org.ihtsdo.buildcloud.service.BuildServiceImpl"/>
	<bean class="org.ihtsdo.buildcloud.service.PackageServiceImpl"/>
	<bean class="org.ihtsdo.buildcloud.service.InputFileServiceImpl"/>
	<bean class="org.ihtsdo.buildcloud.service.ExecutionServiceImpl"/>
	<bean class="org.ihtsdo.buildcloud.service.DevDatabasePrimerService"/>
	<bean class="org.ihtsdo.buildcloud.service.AuthenticationServiceImpl"/>

	<jdbc:embedded-database id="dataSource"/>

	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan">
			<list>
				<value>org.ihtsdo.buildcloud.entity</value>
			</list>
		</property>

		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.hbm2ddl.auto">create</prop>
			</props>
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="dataSource" ref="dataSource" />
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean class="org.ihtsdo.buildcloud.service.maven.MavenGenerator"/>

	<bean class="org.ihtsdo.buildcloud.dao.s3.S3ClientFactory" factory-bean="s3ClientFactory" factory-method="getClient">
		<constructor-arg value="${offlineMode}" />
	</bean>

	<bean class="org.ihtsdo.buildcloud.dao.s3.S3ClientFactory" name="s3ClientFactory">
		<property name="onlineImplementation">
			<bean class="org.ihtsdo.buildcloud.dao.s3.S3ClientImpl">
				<constructor-arg>
					<bean class="com.amazonaws.auth.BasicAWSCredentials">
						<constructor-arg value="${aws.key}" />
						<constructor-arg value="${aws.privateKey}" />
					</bean>
				</constructor-arg>
			</bean>
		</property>
		<property name="offlineImplementation">
			<bean class="org.ihtsdo.buildcloud.dao.s3.OfflineS3ClientImpl">
				<constructor-arg value="${s3Offline.bucketsPath}"/>
			</bean>
		</property>
	</bean>

	<bean class="org.ihtsdo.buildcloud.dao.helper.S3ClientHelper"/>

	<bean class="java.lang.String" id="MavenS3BucketName">
		<constructor-arg value="ire.maven.release.ihtsdo" />
	</bean>

	<bean class="java.lang.String" id="executionS3BucketName">
		<constructor-arg value="ire.execution.release.ihtsdo" />
	</bean>

	<bean class="org.codehaus.jackson.map.ObjectMapper" factory-bean="ObjectMapperFactory" factory-method="createObjectMapper"/>

	<bean id="ObjectMapperFactory" class="org.ihtsdo.buildcloud.service.mapping.JacksonObjectMapperFactory"/>

	<bean class="org.ihtsdo.buildcloud.service.mapping.ExecutionConfigurationJsonGenerator"/>

	<bean class="org.ihtsdo.buildcloud.dao.helper.ExecutionS3PathHelper"/>

	<bean class="org.springframework.security.crypto.password.StandardPasswordEncoder">
		<constructor-arg value="${encryption.salt}"/>
	</bean>

	<bean class="org.springframework.security.crypto.keygen.KeyGenerators" factory-method="string"/>

</beans>
