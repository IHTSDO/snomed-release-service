#---------------------------------------------------------
# Spring security
spring.security.user.name=user
spring.security.user.password=password

# ------------------------------------------------
# use native support for forwarded headers as spring boot 2.2 onwards will ignore X-Forwarded-* headers by default.
server.forward-headers-strategy=NATIVE

# ------------------------------------------------
# AWS config
# These will be removed when using resource manager
#
# This file defines the default properties.
# The application will build and run with these properties, although no online features will be available.
#

# spring cloud aws config
cloud.aws.region.auto=false
cloud.aws.region.static = us-east-1
cloud.aws.stack.auto = false
cloud.aws.credentials.instance-profile = true
cloud.aws.credentials.use-default-aws-credentials-chain = true


# ----------------------------------------
# CIS Identifier Generation config
#
#
cis.url =
cis.username =
cis.password =
cis.timeoutInSeconds = 300
cis.batchSize = 500
cis.maxTries = 5
cis.retryDelaySeconds = 30

#-------------------------------
# Config for SRS application deployment for autoscaling
# Only one instance should be deployed as manager which is responsible for
# queueing build request and processing build status from workers.
# An instance will become a worker when srs.worker is set true
#
srs.manager = true
srs.worker = true

# Data source config
spring.datasource.url=jdbc:h2:mem:srs;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;NON_KEYWORDS=USER;CASE_INSENSITIVE_IDENTIFIERS=TRUE
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driver-class-name=org.h2.Driver
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

srs.environment.shortname = local

# By default start an embedded broker
# SRS build job message queue
#spring.activemq.broker-url=

# Whether the default broker URL should be in memory. Ignored if an explicit broker has been specified.
spring.activemq.user=
spring.activemq.password=
spring.activemq.queuePrefetch=1

srs.jms.queue.prefix = local-srs
srs.jms.queue.concurrency=2

# Time to live for the job status update messages sent to the client
#srs.jms.status.time-to-live-seconds = 3600

# Classification service config for pre and post checks of release package
classification-service.url = http://localhost:8085/classification-service
classification-service.username =
classification-service.password =
classification-service.timeoutInSeconds = 18000

#-----------------------------------
# Snowstorm Server
#
snowstorm.url = http://localhost:8080/snowstorm/snomed-ct/
snowstorm.reasonerId = org.semanticweb.elk.elk.reasoner.factory
snowstorm.admin.username =
snowstorm.admin.password =

# SRS build resource config
srs.storage.bucketName = local.snomed.releases.bucket
srs.build.storage.path = local/builds/
srs.product.manifest.storage.path = local/manifest-files/
srs.published.releases.storage.path = local/published/
srs.publish.job.storage.path = local/published/
srs.externally-maintained.storage.path = local/externally-maintained/

srs.build.versioned-content.bucketName = local.snomed.international.bucket
srs.build.versioned-content.path = authoring/version-content/

srs.publish.batch.size = 1000
srs.published.releases.backup.storage.path = local

# daily build storage for browser import
dailybuild.storage.readonly = false
dailybuild.storage.local.path = store/local/
dailybuild.storage.useCloud = false
dailybuild.storage.cloud.bucketName =
dailybuild.storage.cloud.path =

# Module storage which contains the list of release packages
module.storage.readonly = false
module.storage.local.path = store/local/
module.storage.useCloud = false
module.storage.cloud.bucketName =
module.storage.cloud.path =

# RVF validation config
rvf.url =

# Max upload file size.
spring.servlet.multipart.max-file-size=512MB
spring.servlet.multipart.max-request-size=512MB

# SRS general config
srs.build.offlineMode = true
srs.build.s3.offline.directory = tmp
srs.file-processing.failureMaxRetry = 3
srs.file-processing.transformBufferSize = 10000
srs.build.maxTimeToRun = 120

# The max number of times SRS will retry when branch is locked in snowstorm
srs.file-export.max.retry = 3

# Retry delay in millis
srs.file-export.retry.delay = 30000
# To control async execution thread pool
delegate.security.context.async.task.executor.thread.pool.size = 10

srs.release.package.pattern = ^x?SnomedCT_[^_]+(Edition|Extension)?(RF1|RF2)?_(?i)(DAILYBUILD|ALPHA|BETA|PREPRODUCTION|PRODUCTION)+([_].*)?_\\d{8}T\\d{6}Z$

ims.url =

# Jira configurations
jira.url =
jira.username =
jira.consumerKey =
jira.privateKeyName = UNIT_TEST
jira.project =
jira.issueType =
jira.ticket.assignee =
jira.ticket.priority = 4
jira.ticket.customField.product.release.date =
jira.ticket.customField.reporting.entity =
jira.ticket.customField.reporting.entity.default.value =
jira.ticket.customField.reporting.stage =
jira.ticket.customField.reporting.stage.default.value =
jira.ticket.customField.snomedct.product =

# ----------------------------------------
# Springdoc Swagger Config
#
# ----------------------------------------
# To completely hide the schemas section
springdoc.swagger-ui.defaultModelsExpandDepth=-1
# Sort by tag
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.operationsSorter=alpha
# Hide doc expansion
springdoc.swagger-ui.docExpansion=none
# Enable tryout by default
springdoc.swagger-ui.tryItOutEnabled=true
# Disable generic response
springdoc.override-with-generic-response=false
# Expose spring-boot-actuator endpoints
springdoc.show-actuator=true
springdoc.swagger-ui.groups-order=desc

# Spring boot config for swagger
spring.mvc.pathmatch.matching-strategy= ANT_PATH_MATCHER

# ----------------------------------------
# Spring cloud consul config
# ----------------------------------------
spring.cloud.consul.enabled=false
#spring.cloud.consul.config.prefix=consul
#spring.application.name=snomed-release-service
#spring.cloud.consul.discovery.healthCheckPath=/version
#spring.cloud.consul.config.profile-separator=/
#spring.config.import=consul:localhost:8500

# ----------------------------------------
# Spring cloud vault config
# ----------------------------------------
spring.cloud.vault.enabled=false
#spring.cloud.vault.token=00000000-0000-0000-0000-000000000000
#spring.cloud.vault.scheme=http
#spring.cloud.vault.kv.enabled=true
#spring.config.import=consul:localhost:8500,vault://
#spring.cloud.vault.uri=http://localhost:8200
