#---------------------------------------------------------
# Spring security
srs.basicAuth.username=changeme
srs.basicAuth.password=changeme
#
encryption.salt=7aff989ff7dd09c5

# ------------------------------------------------
# AWS config
# These will be removed when using resource manager
#
# This file defines the default properties.
# The application will build and run with these properties, although no online features will be available.
#
# AWS Keys
aws.key=
aws.privateKey=

# spring cloud aws config
cloud.aws.region.static=us-east-1
cloud.aws.stack.auto=false
cloud.aws.credentials.instance-profile=true
cloud.aws.credentials.use-default-aws-credentials-chain=true


# ----------------------------------------
# CIS Identifier Generation config
#
#
cis.url=
cis.maxTries=5
cis.retryDelaySeconds=30
cis.userName=
cis.password=
cis.timeoutInSeconds=300
cis.batchSize=500

#-------------------------------
# Config for SRS application deployment for autoscaling
# Only one instance should be deployed as manager which is responsible for
# queueing build request and processing build status from workers.
# An instance will become a worker when srs.worker is set true
#
srs.manager=true
srs.worker=true

# Data source config
srs.jdbc.driverClassName=org.h2.Driver
srs.jdbc.url=jdbc:h2:mem:srs;DB_CLOSE_DELAY=-1
srs.jdbc.username=sa
srs.jdbc.password=
srs.hibernate.dialect=org.hibernate.dialect.H2Dialect
srs.environment.shortname=local


# By default start an embedded broker
# SRS build job message queue
srs.build.job.jms.url=vm://localhost:61617
srs.build.job.jms.username=
srs.build.job.jms.password=
# Custom property to set the queue prefetch size
spring.activemq.queuePrefetch=1
srs.build.job.queue=srs-jobs
srs.build.job.status.queue=srs-jobs-status

# Time to live for the job status update messages sent to the client
#srs.jms.status.time-to-live-seconds=3600

# Classification service config for pre and post checks of release package
classification-service.url=http://localhost:8085/classification-service
classification-service.username=
classification-service.password=
classification-service.timeoutInSeconds=18000

#-----------------------------------
# Snowstorm Server
#
snowstorm.url=http://localhost:8080/
snowstorm.path=/snowstorm/snomed-ct/
snowstorm.username=
snowstorm.password=
snowstorm.reasonerId=org.semanticweb.elk.elk.reasoner.factory


# SRS build resource config
srs.build.externally-maintained-bucketName=
srs.build.bucketName=local.build.bucket
srs.build.published-bucketName=local.published.bucket
srs.build.versioned-content.bucketName=local.snomed.international.bucket
srs.build.versioned-content.path=authoring/version-content/
srs.build.offlineMode=true
srs.build.s3.offline.directory=


# daily build storage for browser import
srs.dailybuild.storage.readonly=false
srs.dailybuild.storage.local.path=store/local/
srs.dailybuild.storage.useCloud=false
srs.dailybuild.storage.cloud.bucketName=
srs.dailybuild.storage.cloud.path=


# RVF validation config
rvf.url=

# SRS general config
srs.file-processing.failureMaxRetry=3
srs.file-processing.transformBufferSize =10000
delegate.security.context.async.task.executor.thread.pool.size=10

